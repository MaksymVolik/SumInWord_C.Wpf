<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Стиль для ComboBox -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="Border"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          CornerRadius="8">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="32"/>
                                            </Grid.ColumnDefinitions>
                                            <Path x:Name="Arrow"
                                                Grid.Column="1"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M 0 0 L 4 4 L 8 0 Z"
                                                Fill="{DynamicResource PrimaryTextBrush}"/>
                                        </Grid>
                                    </Border>
									<ControlTemplate.Triggers>
										<!-- Закритий стан (як IsFocused="False" у TextBox) -->
										<Trigger Property="IsChecked" Value="False">
											<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
											<Setter TargetName="Border" Property="BorderThickness" Value="1"/>
											<Setter TargetName="Border" Property="Margin" Value="1"/>
										</Trigger>

										<!-- Відкритий стан (як IsFocused="True" у TextBox) -->
										<Trigger Property="IsChecked" Value="True">
											<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
											<Setter TargetName="Border" Property="BorderThickness" Value="2"/>
											<Setter TargetName="Border" Property="Margin" Value="0"/>
										</Trigger>

										<!-- Наведення миші (має вищий пріоритет) -->
										<Trigger Property="IsMouseOver" Value="True">
											<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentHoverBrush}"/>
										</Trigger>
									</ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Margin="8,0,32,0"
                                        IsHitTestVisible="False"/>
                        <Popup x:Name="Popup"
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True"
                             Focusable="False"
                             PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                      Background="{DynamicResource BackgroundBrush}"
                                      BorderBrush="{DynamicResource AccentBrush}"
                                      BorderThickness="2"
                                      CornerRadius="8"
                                      Margin="0,2,0,0">
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ComboBoxItem -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="4"
                          Padding="{TemplateBinding Padding}"
                          Margin="2">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<!-- Стиль для ComboBox з іконками -->
	<Style x:Key="IconComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
		<Setter Property="Width" Value="50"/>
		<Setter Property="Height" Value="32"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="ToggleButton"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Focusable="False"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press">
							<ToggleButton.Template>
								<ControlTemplate TargetType="{x:Type ToggleButton}">
									<Border x:Name="Border"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  CornerRadius="8">
										<!-- Показуємо тільки іконку -->
										<ContentPresenter x:Name="ContentPresenter"
														Content="{Binding SelectedItem.Tag, RelativeSource={RelativeSource AncestorType=ComboBox}}"
														HorizontalAlignment="Center"
														VerticalAlignment="Center"
														Margin="0"/>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsChecked" Value="False">
											<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
											<Setter TargetName="Border" Property="BorderThickness" Value="1"/>
											<Setter TargetName="Border" Property="Margin" Value="1"/>
										</Trigger>
										<Trigger Property="IsChecked" Value="True">
											<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
											<Setter TargetName="Border" Property="BorderThickness" Value="2"/>
											<Setter TargetName="Border" Property="Margin" Value="0"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentHoverBrush}"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>

						<Popup x:Name="Popup"
							 Placement="Bottom"
							 IsOpen="{TemplateBinding IsDropDownOpen}"
							 AllowsTransparency="True"
							 Focusable="False"
							 PopupAnimation="Slide">
							<Grid x:Name="DropDown"
								SnapsToDevicePixels="True"
								MinWidth="180"
								MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder"
									  Background="{DynamicResource BackgroundBrush}"
									  BorderBrush="{DynamicResource AccentBrush}"
									  BorderThickness="2"
									  CornerRadius="8"
									  Margin="0,2,0,0">
									<ScrollViewer Margin="4" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>